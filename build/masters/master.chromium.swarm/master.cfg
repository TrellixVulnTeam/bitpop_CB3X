# -*- python -*-
# ex: set syntax=python:

# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.changes import svnpoller
from buildbot.scheduler import Scheduler

from master import build_utils
from master import gatekeeper
from master import chromium_step
from master import master_utils
from master import slaves_list
from master.factory import swarm_factory

import config

ActiveMaster = config.Master.ChromiumSwarm

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)
c['slavePortnum'] = ActiveMaster.slave_port

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

# the 'change_source' list tells the buildmaster how it should find out about
# source code changes. Any class which implements IChangeSource can be added
# to this list: there are several in buildbot/changes/*.py to choose from.
def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude .DEPS.git from triggering builds on chrome.
  if path == 'src/.DEPS.git':
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Rev link urls.
chromium_rev = 'http://src.chromium.org/viewvc/chrome?view=rev&revision=%s'

# Polls config.Master.trunk_url for changes
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]

####### SCHEDULERS

s_chromium_swarm = Scheduler(name='experimental',
                             branch='src',
                             treeStableTimer=60,
                             builderNames=['Linux Swarm Tests (1)',
                                           'Mac Swarm Tests (1)',
                                           'Windows Swarm Tests (1)'])

c['schedulers'] = [s_chromium_swarm]

# ----------------------------------------------------------------------------
# FACTORIES

m_linux = swarm_factory.SwarmFactory(
    'src/build',
    target_platform='linux2',
    full_checkout=True)
f_chromium_linux_swarm = swarm_factory.SetupSwarmTests(
    m_linux,
    options=[
      '--compiler=goma',
      'chromium_swarm_tests',
    ],
    swarm_server=config.Master.swarm_server_dev_internal_url,
    ninja=True,
    tests=[
      'base_unittests',
      'browser_tests',
      'net_unittests',
      'sync_integration_tests',
      'unit_tests',
    ])

m_win = swarm_factory.SwarmFactory(
    'src/build',
    target_platform='win32',
    full_checkout=True)
f_chromium_win_swarm = swarm_factory.SetupSwarmTests(
    m_win,
    # Uncomment the first line and comment the second one to revert to msbuild.
    #project='all.sln;chromium_swarm_tests',
    options=[
      'chromium_swarm_tests',
    ],
    swarm_server=config.Master.swarm_server_dev_internal_url,
    ninja=True,
    tests=[
      'base_unittests',
      'browser_tests',
      'net_unittests',
      'unit_tests',
    ])

m_mac = swarm_factory.SwarmFactory(
    'src/build',
    target_platform='darwin',
    full_checkout=True)
f_chromium_mac_swarm = swarm_factory.SetupSwarmTests(
    m_mac,
    options=[
      '--compiler=goma-clang',
      'chromium_swarm_tests',
    ],
    swarm_server=config.Master.swarm_server_dev_internal_url,
    ninja=True,
    tests=[
      'base_unittests',
      'browser_tests',
      'net_unittests',
      'sync_integration_tests',
      'unit_tests',
    ])


# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_chromium_linux_swarm_1 = {
  'name': 'Linux Swarm Tests (1)',
  'builddir': 'chromium-linux-swarm-1',
  'factory': f_chromium_linux_swarm,
  'auto_reboot': False,
}

b_chromium_win_swarm_1 = {
  'name': 'Windows Swarm Tests (1)',
  'builddir': 'chromium-win-swarm-1',
  'factory': f_chromium_win_swarm,
  'auto_reboot': False,
}

b_chromium_mac_swarm_1 = {
  'name': 'Mac Swarm Tests (1)',
  'builddir': 'chromium-mac-swarm-1',
  'factory': f_chromium_mac_swarm,
  'auto_reboot': False,
}

c['builders'] = [b_chromium_linux_swarm_1, b_chromium_win_swarm_1,
                 b_chromium_mac_swarm_1]

# Associate the slaves to the builders. The configuration is in slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumSwarm')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])


####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)


####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html="../master.chromium.git/public_html",
    templates=['../master.chromium/templates'],
    enable_http_status_push=ActiveMaster.is_production_host)

if ActiveMaster.is_production_host:
  c['status'].append(gatekeeper.GateKeeper(
        None,
        fromaddr='nobody@chromium.org',  # Reply-To address
        relayhost=config.Master.smtp,
        status_header='%(steps)s failed on "%(builder)s"',
        subject='chromium.swarm %(result)s in %(projectName)s '
                'on %(builder)s',
        extraRecipients=['csharp@chromium.org', 'maruel@chromium.org'],
        sendToInterestedUsers=False))

####### PROJECT IDENTITY

c['projectName'] = ActiveMaster.project_name
c['projectURL'] = config.Master.project_url
c['buildbotURL'] = 'http://build.chromium.org/p/chromium.swarm/'
